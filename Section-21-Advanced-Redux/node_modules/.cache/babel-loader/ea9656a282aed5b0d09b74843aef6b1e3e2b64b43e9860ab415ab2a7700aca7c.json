{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialCartState = {\n  isShowCart: false,\n  items: []\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: initialCartState,\n  reducers: {\n    toggleCart(state) {\n      state.isShowCart = !state.isShowCart;\n    },\n    addToCart(state, action) {\n      const existingCartItemIndex = state.items.findIndex(item => item.id === action.payload.id);\n      if (existingCartItemIndex !== -1) {\n        state.items[existingCartItemIndex].quantity += 1;\n        state.items[existingCartItemIndex].total += action.payload.price;\n      } else {\n        state.items.push({\n          ...action.payload,\n          quantity: 1,\n          total: action.payload.price\n        });\n      }\n    },\n    increase(state, action) {\n      const existingCartItemIndex = state.items.findIndex(item => item.id === action.payload);\n      console.log(state.items);\n      console.log(action);\n      console.log(existingCartItemIndex);\n      const item = state.items[existingCartItemIndex];\n      state.items[existingCartItemIndex].total += item.price;\n      state.items[existingCartItemIndex].quantity += 1;\n    },\n    decrease(state, action) {\n      const existingCartItemIndex = state.items.findIndex(item => item.id === action.id);\n      console.log(action);\n      const item = state.items[existingCartItemIndex];\n      if (item.quantity === 1) {\n        state.items.splice(existingCartItemIndex, 1);\n      } else {\n        state.items[existingCartItemIndex].quantity -= 1;\n        state.items[existingCartItemIndex].total -= item.price;\n      }\n    }\n  }\n});\nexport default cartSlice.reducer;\nexport const cartActions = cartSlice.actions;","map":{"version":3,"names":["createSlice","initialCartState","isShowCart","items","cartSlice","name","initialState","reducers","toggleCart","state","addToCart","action","existingCartItemIndex","findIndex","item","id","payload","quantity","total","price","push","increase","console","log","decrease","splice","reducer","cartActions","actions"],"sources":["C:/Users/PatrickClaassens/OneDrive/React Course/React-Udemy-Course/Section-21-Advanced-Redux/src/store/cart.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialCartState = { isShowCart: false, items: [] };\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: initialCartState,\r\n  reducers: {\r\n    toggleCart(state) {\r\n      state.isShowCart = !state.isShowCart;\r\n    },\r\n    addToCart(state, action) {\r\n      const existingCartItemIndex = state.items.findIndex(\r\n        (item) => item.id === action.payload.id\r\n      );\r\n      if (existingCartItemIndex !== -1) {\r\n        state.items[existingCartItemIndex].quantity += 1;\r\n        state.items[existingCartItemIndex].total += action.payload.price;\r\n      } else {\r\n        state.items.push({\r\n          ...action.payload,\r\n          quantity: 1,\r\n          total: action.payload.price,\r\n        });\r\n      }\r\n    },\r\n    increase(state, action) {\r\n      const existingCartItemIndex = state.items.findIndex(\r\n        (item) => item.id === action.payload\r\n      );\r\n      console.log(state.items)\r\n      console.log(action)\r\n      console.log(existingCartItemIndex)\r\n\r\n      const item = state.items[existingCartItemIndex];\r\n      state.items[existingCartItemIndex].total += item.price;\r\n      state.items[existingCartItemIndex].quantity += 1;\r\n    },\r\n    decrease(state, action) {\r\n      const existingCartItemIndex = state.items.findIndex(\r\n        (item) => item.id === action.id\r\n      );\r\n\r\n      console.log(action)\r\n\r\n      const item = state.items[existingCartItemIndex];\r\n\r\n      if (item.quantity === 1) {\r\n        state.items.splice(existingCartItemIndex, 1);\r\n      } else {\r\n        state.items[existingCartItemIndex].quantity -= 1;\r\n        state.items[existingCartItemIndex].total -= item.price;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport default cartSlice.reducer;\r\nexport const cartActions = cartSlice.actions;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,gBAAgB,GAAG;EAAEC,UAAU,EAAE,KAAK;EAAEC,KAAK,EAAE;AAAG,CAAC;AACzD,MAAMC,SAAS,GAAGJ,WAAW,CAAC;EAC5BK,IAAI,EAAE,MAAM;EACZC,YAAY,EAAEL,gBAAgB;EAC9BM,QAAQ,EAAE;IACRC,UAAUA,CAACC,KAAK,EAAE;MAChBA,KAAK,CAACP,UAAU,GAAG,CAACO,KAAK,CAACP,UAAU;IACtC,CAAC;IACDQ,SAASA,CAACD,KAAK,EAAEE,MAAM,EAAE;MACvB,MAAMC,qBAAqB,GAAGH,KAAK,CAACN,KAAK,CAACU,SAAS,CAChDC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAAO,CAACD,EACvC,CAAC;MACD,IAAIH,qBAAqB,KAAK,CAAC,CAAC,EAAE;QAChCH,KAAK,CAACN,KAAK,CAACS,qBAAqB,CAAC,CAACK,QAAQ,IAAI,CAAC;QAChDR,KAAK,CAACN,KAAK,CAACS,qBAAqB,CAAC,CAACM,KAAK,IAAIP,MAAM,CAACK,OAAO,CAACG,KAAK;MAClE,CAAC,MAAM;QACLV,KAAK,CAACN,KAAK,CAACiB,IAAI,CAAC;UACf,GAAGT,MAAM,CAACK,OAAO;UACjBC,QAAQ,EAAE,CAAC;UACXC,KAAK,EAAEP,MAAM,CAACK,OAAO,CAACG;QACxB,CAAC,CAAC;MACJ;IACF,CAAC;IACDE,QAAQA,CAACZ,KAAK,EAAEE,MAAM,EAAE;MACtB,MAAMC,qBAAqB,GAAGH,KAAK,CAACN,KAAK,CAACU,SAAS,CAChDC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACK,OAC/B,CAAC;MACDM,OAAO,CAACC,GAAG,CAACd,KAAK,CAACN,KAAK,CAAC;MACxBmB,OAAO,CAACC,GAAG,CAACZ,MAAM,CAAC;MACnBW,OAAO,CAACC,GAAG,CAACX,qBAAqB,CAAC;MAElC,MAAME,IAAI,GAAGL,KAAK,CAACN,KAAK,CAACS,qBAAqB,CAAC;MAC/CH,KAAK,CAACN,KAAK,CAACS,qBAAqB,CAAC,CAACM,KAAK,IAAIJ,IAAI,CAACK,KAAK;MACtDV,KAAK,CAACN,KAAK,CAACS,qBAAqB,CAAC,CAACK,QAAQ,IAAI,CAAC;IAClD,CAAC;IACDO,QAAQA,CAACf,KAAK,EAAEE,MAAM,EAAE;MACtB,MAAMC,qBAAqB,GAAGH,KAAK,CAACN,KAAK,CAACU,SAAS,CAChDC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,MAAM,CAACI,EAC/B,CAAC;MAEDO,OAAO,CAACC,GAAG,CAACZ,MAAM,CAAC;MAEnB,MAAMG,IAAI,GAAGL,KAAK,CAACN,KAAK,CAACS,qBAAqB,CAAC;MAE/C,IAAIE,IAAI,CAACG,QAAQ,KAAK,CAAC,EAAE;QACvBR,KAAK,CAACN,KAAK,CAACsB,MAAM,CAACb,qBAAqB,EAAE,CAAC,CAAC;MAC9C,CAAC,MAAM;QACLH,KAAK,CAACN,KAAK,CAACS,qBAAqB,CAAC,CAACK,QAAQ,IAAI,CAAC;QAChDR,KAAK,CAACN,KAAK,CAACS,qBAAqB,CAAC,CAACM,KAAK,IAAIJ,IAAI,CAACK,KAAK;MACxD;IACF;EACF;AACF,CAAC,CAAC;AAEF,eAAef,SAAS,CAACsB,OAAO;AAChC,OAAO,MAAMC,WAAW,GAAGvB,SAAS,CAACwB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}