{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PatrickClaassens\\\\OneDrive\\\\React Course\\\\React-Udemy-Course\\\\Section-22.1-Multipage-Application-Using-React-Router\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport HomePage from \"../src/pages/HomePage\";\nimport EventsPage from \"../src/pages/EventsPage\";\nimport EventDetailPage from \"../src/pages/EventDetailsPage\";\nimport NewEventPage from \"../src/pages/NewEventPage\";\nimport EditEventPage from \"../src/pages/EditEventPage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter({\n  routes: [{\n    path: \"/\",\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this),\n    children: [{\n      path: \"events\",\n      element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 20\n      }, this)\n    }, {\n      path: \"events/:eventId\",\n      element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 20\n      }, this)\n    }, {\n      path: \"events/new\",\n      element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 20\n      }, this)\n    }, {\n      path: \"events/:eventId/edit\",\n      element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 50\n      }, this)\n    }]\n  }]\n});\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["createBrowserRouter","RouterProvider","HomePage","EventsPage","EventDetailPage","NewEventPage","EditEventPage","jsxDEV","_jsxDEV","router","routes","path","element","fileName","_jsxFileName","lineNumber","columnNumber","children","App","_c","$RefreshReg$"],"sources":["C:/Users/PatrickClaassens/OneDrive/React Course/React-Udemy-Course/Section-22.1-Multipage-Application-Using-React-Router/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nimport HomePage from \"../src/pages/HomePage\";\nimport EventsPage from \"../src/pages/EventsPage\";\nimport EventDetailPage from \"../src/pages/EventDetailsPage\";\nimport NewEventPage from \"../src/pages/NewEventPage\";\nimport EditEventPage from \"../src/pages/EditEventPage\";\n\nconst router = createBrowserRouter({\n  routes: [\n    {\n      path: \"/\",\n      element: <HomePage />,\n      children: [\n        {\n          path: \"events\",\n          element: <EventsPage />,\n        },\n        {\n          path: \"events/:eventId\",\n          element: <EventDetailPage />,\n        },\n        {\n          path: \"events/new\",\n          element: <NewEventPage />,\n        },\n        { path: \"events/:eventId/edit\", element: <EditEventPage /> },\n      ],\n    },\n  ],\n});\n\nfunction App() {\n  return <RouterProvider router={router} />;\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,mBAAmB,EAAEC,cAAc,QAAQ,kBAAkB;AACtE,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,eAAe,MAAM,+BAA+B;AAC3D,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,MAAM,GAAGT,mBAAmB,CAAC;EACjCU,MAAM,EAAE,CACN;IACEC,IAAI,EAAE,GAAG;IACTC,OAAO,eAAEJ,OAAA,CAACN,QAAQ;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;IACrBC,QAAQ,EAAE,CACR;MACEN,IAAI,EAAE,QAAQ;MACdC,OAAO,eAAEJ,OAAA,CAACL,UAAU;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IACxB,CAAC,EACD;MACEL,IAAI,EAAE,iBAAiB;MACvBC,OAAO,eAAEJ,OAAA,CAACJ,eAAe;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAC7B,CAAC,EACD;MACEL,IAAI,EAAE,YAAY;MAClBC,OAAO,eAAEJ,OAAA,CAACH,YAAY;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAC1B,CAAC,EACD;MAAEL,IAAI,EAAE,sBAAsB;MAAEC,OAAO,eAAEJ,OAAA,CAACF,aAAa;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAE,CAAC;EAEhE,CAAC;AAEL,CAAC,CAAC;AAEF,SAASE,GAAGA,CAAA,EAAG;EACb,oBAAOV,OAAA,CAACP,cAAc;IAACQ,MAAM,EAAEA;EAAO;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC3C;AAACG,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}