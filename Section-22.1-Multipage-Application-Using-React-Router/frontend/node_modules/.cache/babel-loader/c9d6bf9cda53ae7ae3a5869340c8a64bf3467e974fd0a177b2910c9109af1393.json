{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PatrickClaassens\\\\OneDrive\\\\React Course\\\\React-Udemy-Course\\\\Section-22.1-Multipage-Application-Using-React-Router\\\\frontend\\\\src\\\\pages\\\\EventsPage.js\",\n  _s = $RefreshSig$();\nimport EventsList from \"../components/EventsList\";\nimport { useLoaderData } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const data = useLoaderData();\n  console.log(data);\n  if (data.isError) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", data.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch(\"http://localhost:8080/events\");\n  if (!response.ok) {\n    // return { isError: true, message: \"Could not fetch event.\" };\n    throw new Response(JSON.stringify({\n      message: \"Could not fetch events\"\n    }), {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["EventsList","useLoaderData","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","data","console","log","isError","children","message","fileName","_jsxFileName","lineNumber","columnNumber","events","_c","loader","response","fetch","ok","Response","JSON","stringify","status","$RefreshReg$"],"sources":["C:/Users/PatrickClaassens/OneDrive/React Course/React-Udemy-Course/Section-22.1-Multipage-Application-Using-React-Router/frontend/src/pages/EventsPage.js"],"sourcesContent":["import EventsList from \"../components/EventsList\";\r\nimport { useLoaderData } from \"react-router-dom\";\r\n\r\nfunction EventsPage() {\r\n  const data = useLoaderData();\r\n  console.log(data);\r\n\r\n  if (data.isError) {\r\n    return <p>Error: {data.message}</p>;\r\n  }\r\n\r\n  const events = data.events;\r\n\r\n  return (\r\n    <>\r\n      <EventsList events={events} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EventsPage;\r\n\r\nexport async function loader() {\r\n  const response = await fetch(\"http://localhost:8080/events\");\r\n\r\n  if (!response.ok) {\r\n    // return { isError: true, message: \"Could not fetch event.\" };\r\n    throw new Response(JSON.stringify({ message: \"Could not fetch events\" }), {\r\n      status: 500,\r\n    });\r\n  } else {\r\n    return response;\r\n  }\r\n}\r\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,0BAA0B;AACjD,SAASC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjD,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAMC,IAAI,GAAGP,aAAa,CAAC,CAAC;EAC5BQ,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EAEjB,IAAIA,IAAI,CAACG,OAAO,EAAE;IAChB,oBAAOR,OAAA;MAAAS,QAAA,GAAG,SAAO,EAACJ,IAAI,CAACK,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACrC;EAEA,MAAMC,MAAM,GAAGV,IAAI,CAACU,MAAM;EAE1B,oBACEf,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACET,OAAA,CAACH,UAAU;MAACkB,MAAM,EAAEA;IAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC,gBAC9B,CAAC;AAEP;AAACV,EAAA,CAfQD,UAAU;EAAA,QACJL,aAAa;AAAA;AAAAkB,EAAA,GADnBb,UAAU;AAiBnB,eAAeA,UAAU;AAEzB,OAAO,eAAec,MAAMA,CAAA,EAAG;EAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;IAChB;IACA,MAAM,IAAIC,QAAQ,CAACC,IAAI,CAACC,SAAS,CAAC;MAAEb,OAAO,EAAE;IAAyB,CAAC,CAAC,EAAE;MACxEc,MAAM,EAAE;IACV,CAAC,CAAC;EACJ,CAAC,MAAM;IACL,OAAON,QAAQ;EACjB;AACF;AAAC,IAAAF,EAAA;AAAAS,YAAA,CAAAT,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}