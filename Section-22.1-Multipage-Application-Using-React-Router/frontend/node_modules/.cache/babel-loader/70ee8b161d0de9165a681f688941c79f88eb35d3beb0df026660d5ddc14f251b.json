{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PatrickClaassens\\\\OneDrive\\\\React Course\\\\React-Udemy-Course\\\\Section-22.1-Multipage-Application-Using-React-Router\\\\frontend\\\\src\\\\pages\\\\EventDetailsPage.js\",\n  _s = $RefreshSig$();\nimport { useLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventDetailsPage() {\n  _s();\n  const data = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 10\n  }, this);\n}\n_s(EventDetailsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventDetailsPage;\nexport default EventDetailsPage;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = fetch(\"http://localhost:8080/events/\" + id);\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: \"Failed to fetch event details\"\n    }), {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailsPage\");","map":{"version":3,"names":["useLoaderData","EventItem","jsxDEV","_jsxDEV","EventDetailsPage","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","eventId","response","fetch","ok","Response","JSON","stringify","message","status","$RefreshReg$"],"sources":["C:/Users/PatrickClaassens/OneDrive/React Course/React-Udemy-Course/Section-22.1-Multipage-Application-Using-React-Router/frontend/src/pages/EventDetailsPage.js"],"sourcesContent":["import {  useLoaderData } from \"react-router-dom\";\r\nimport EventItem from \"../components/EventItem\";\r\n\r\nfunction EventDetailsPage() {\r\n  const data = useLoaderData();\r\n\r\n  return <EventItem event={data.event} />;\r\n}\r\n\r\nexport default EventDetailsPage;\r\n\r\nexport async function loader({ request, params }) {\r\n  const id = params.eventId;\r\n\r\n  const response = fetch(\"http://localhost:8080/events/\" + id);\r\n\r\n  if (!response.ok) {\r\n    throw new Response(\r\n      JSON.stringify({ message: \"Failed to fetch event details\" }),\r\n      { status: 500 }\r\n    );\r\n  } else {\r\n    return response;\r\n  }\r\n}\r\n"],"mappings":";;AAAA,SAAUA,aAAa,QAAQ,kBAAkB;AACjD,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAMC,IAAI,GAAGN,aAAa,CAAC,CAAC;EAE5B,oBAAOG,OAAA,CAACF,SAAS;IAACM,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACzC;AAACN,EAAA,CAJQD,gBAAgB;EAAA,QACVJ,aAAa;AAAA;AAAAY,EAAA,GADnBR,gBAAgB;AAMzB,eAAeA,gBAAgB;AAE/B,OAAO,eAAeS,MAAMA,CAAC;EAAEC,OAAO;EAAEC;AAAO,CAAC,EAAE;EAChD,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EAEzB,MAAMC,QAAQ,GAAGC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC;EAE5D,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;IAChB,MAAM,IAAIC,QAAQ,CAChBC,IAAI,CAACC,SAAS,CAAC;MAAEC,OAAO,EAAE;IAAgC,CAAC,CAAC,EAC5D;MAAEC,MAAM,EAAE;IAAI,CAChB,CAAC;EACH,CAAC,MAAM;IACL,OAAOP,QAAQ;EACjB;AACF;AAAC,IAAAN,EAAA;AAAAc,YAAA,CAAAd,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}